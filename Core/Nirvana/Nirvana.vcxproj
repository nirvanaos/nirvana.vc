<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug 2022|Win32">
      <Configuration>Debug 2022</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug 2022|x64">
      <Configuration>Debug 2022</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug LLVM|Win32">
      <Configuration>Debug LLVM</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug LLVM|x64">
      <Configuration>Debug LLVM</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release 2022|Win32">
      <Configuration>Release 2022</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release 2022|x64">
      <Configuration>Release 2022</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release LLVM|Win32">
      <Configuration>Release LLVM</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release LLVM|x64">
      <Configuration>Release LLVM</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{E820686C-5A7C-484B-846C-6198E4BB7C65}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>Nirvana</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>NotSet</CharacterSet>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>ClangCL</PlatformToolset>
    <CharacterSet>NotSet</CharacterSet>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>NotSet</CharacterSet>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>NotSet</CharacterSet>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>NotSet</CharacterSet>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>ClangCL</PlatformToolset>
    <CharacterSet>NotSet</CharacterSet>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>NotSet</CharacterSet>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>ClangCL</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>NotSet</CharacterSet>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)x64\$(Configuration)\x86\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <IncludePath>$(IncludePath)</IncludePath>
    <LibraryPath>$(VCToolsInstallDir)lib\onecore\x86;$(VC_LibraryPath_x86);$(WindowsSDK_LibraryPath_x86)</LibraryPath>
    <ExternalIncludePath>$(SolutionDir)Library.VC\Nirvana\ORB\Include;$(SolutionDir)Library.VC\Nirvana\SRC\Include;$(ExternalIncludePath);$(VC_IncludePath);$(WindowsSDK_IncludePath);</ExternalIncludePath>
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <ExecutablePath>$(VC_ExecutablePath_x86);$(CommonExecutablePath);$(SolutionDir)vcpkg_installed\x64-windows\tools\nidl2cpp</ExecutablePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <IncludePath>$(SolutionDir)Library.VC\Nirvana\SRC\Include;$(LLVMInstallDir)\lib\clang\$(LLVMToolsVersion)\include;$(IncludePath)</IncludePath>
    <LibraryPath>$(VCToolsInstallDir)lib\onecore\x86;$(VC_LibraryPath_x86);$(WindowsSDK_LibraryPath_x86)</LibraryPath>
    <ExternalIncludePath>$(SolutionDir)Library.VC\Nirvana\ORB\Include;$(SolutionDir)Library.VC\Nirvana\SRC\Include;$(ExternalIncludePath);$(VC_IncludePath);$(WindowsSDK_IncludePath);</ExternalIncludePath>
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <ExecutablePath>$(LLVMInstallDir)\bin;$(ExecutablePath);$(SolutionDir)vcpkg_installed\x64-windows\tools\nidl2cpp</ExecutablePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(IncludePath)</IncludePath>
    <LibraryPath>$(VCToolsInstallDir)lib\onecore\x64;$(VC_LibraryPath_x64);$(WindowsSDK_LibraryPath_x64)</LibraryPath>
    <ExternalIncludePath>$(SolutionDir)Library.VC\Nirvana\ORB\Include;$(SolutionDir)Library.VC\Nirvana\SRC\Include;$(ExternalIncludePath);$(VC_IncludePath);$(WindowsSDK_IncludePath);</ExternalIncludePath>
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <ExecutablePath>$(VC_ExecutablePath_x64);$(CommonExecutablePath);$(SolutionDir)vcpkg_installed\x64-windows\tools\nidl2cpp</ExecutablePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(SolutionDir)Library.VC\Nirvana\SRC\Include;$(LLVMInstallDir)\lib\clang\$(LLVMToolsVersion)\include;$(IncludePath)</IncludePath>
    <LibraryPath>$(VCToolsInstallDir)lib\onecore\x64;$(VC_LibraryPath_x64);$(WindowsSDK_LibraryPath_x64)</LibraryPath>
    <ExternalIncludePath>$(SolutionDir)Library.VC\Nirvana\ORB\Include;$(SolutionDir)Library.VC\Nirvana\SRC\Include;$(ExternalIncludePath);$(VC_IncludePath);$(WindowsSDK_IncludePath);</ExternalIncludePath>
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <ExecutablePath>$(LLVMInstallDir)\bin;$(ExecutablePath);$(SolutionDir)vcpkg_installed\x64-windows\tools\nidl2cpp</ExecutablePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)x64\$(Configuration)\x86\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <IncludePath>$(IncludePath)</IncludePath>
    <LibraryPath>$(VCToolsInstallDir)lib\onecore\x86;$(VC_LibraryPath_x86);$(WindowsSDK_LibraryPath_x86)</LibraryPath>
    <ExternalIncludePath>$(SolutionDir)Library.VC\Nirvana\ORB\Include;$(SolutionDir)Library.VC\Nirvana\SRC\Include;$(ExternalIncludePath);$(VC_IncludePath);$(WindowsSDK_IncludePath);</ExternalIncludePath>
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <ExecutablePath>$(VC_ExecutablePath_x86);$(CommonExecutablePath);$(SolutionDir)vcpkg_installed\x64-windows\tools\nidl2cpp</ExecutablePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <IncludePath>$(SolutionDir)Library.VC\Nirvana\SRC\Include;$(LLVMInstallDir)\lib\clang\$(LLVMToolsVersion)\include;$(IncludePath)</IncludePath>
    <LibraryPath>$(VCToolsInstallDir)lib\onecore\x86;$(VC_LibraryPath_x86);$(WindowsSDK_LibraryPath_x86)</LibraryPath>
    <ExternalIncludePath>$(SolutionDir)Library.VC\Nirvana\ORB\Include;$(SolutionDir)Library.VC\Nirvana\SRC\Include;$(ExternalIncludePath);$(VC_IncludePath);$(WindowsSDK_IncludePath);</ExternalIncludePath>
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <ExecutablePath>$(LLVMInstallDir)\bin;$(ExecutablePath);$(SolutionDir)vcpkg_installed\x64-windows\tools\nidl2cpp</ExecutablePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(IncludePath)</IncludePath>
    <LibraryPath>$(VCToolsInstallDir)lib\onecore\x64;$(VC_LibraryPath_x64);$(WindowsSDK_LibraryPath_x64)</LibraryPath>
    <ExternalIncludePath>$(SolutionDir)Library.VC\Nirvana\ORB\Include;$(SolutionDir)Library.VC\Nirvana\SRC\Include;$(ExternalIncludePath);$(VC_IncludePath);$(WindowsSDK_IncludePath);</ExternalIncludePath>
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <ExecutablePath>$(VC_ExecutablePath_x64);$(CommonExecutablePath);$(SolutionDir)vcpkg_installed\x64-windows\tools\nidl2cpp</ExecutablePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(SolutionDir)Library.VC\Nirvana\SRC\Include;$(LLVMInstallDir)\lib\clang\$(LLVMToolsVersion)\include;$(IncludePath)</IncludePath>
    <LibraryPath>$(VCToolsInstallDir)lib\onecore\x64;$(VC_LibraryPath_x64);$(WindowsSDK_LibraryPath_x64)</LibraryPath>
    <ExternalIncludePath>$(SolutionDir)Library.VC\Nirvana\ORB\Include;$(SolutionDir)Library.VC\Nirvana\SRC\Include;$(ExternalIncludePath);$(VC_IncludePath);$(WindowsSDK_IncludePath);</ExternalIncludePath>
    <IgnoreImportLibrary>true</IgnoreImportLibrary>
    <ExecutablePath>$(LLVMInstallDir)\bin;$(ExecutablePath);$(SolutionDir)vcpkg_installed\x64-windows\tools\nidl2cpp</ExecutablePath>
  </PropertyGroup>
  <PropertyGroup Label="Vcpkg">
    <VcpkgEnabled>false</VcpkgEnabled>
    <VcpkgManifestInstall>false</VcpkgManifestInstall>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NIRVANA_HOST_PLATFORM=PLATFORM_X64;NIRVANA_NO_BAD_ALLOC;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <ExceptionHandling>Sync</ExceptionHandling>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalIncludeDirectories>..\..\Library.VC\Nirvana\SRC\Include;..\..\Library.VC\Nirvana\ORB\Include;..\..\Library.VC\Nirvana\IDL;..\..\Port\Windows\Windows;..\Core\Source;..\Core\Source\ORB;..\LibCore;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <AdditionalOptions>/Zc:sizedDealloc /bigobj /Zc:__cplusplus</AdditionalOptions>
      <SupportJustMyCode>false</SupportJustMyCode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <FunctionLevelLinking>true</FunctionLevelLinking>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <AdditionalDependencies>ucrtd.lib;vcruntimed.lib;msvcrtd.lib;libcpmtd.lib;onecore_apiset.lib;ntdll.lib;user32.lib;dbghelp.lib;shell32.lib</AdditionalDependencies>
      <EntryPointSymbol>nirvana_startup</EntryPointSymbol>
      <OptimizeReferences>true</OptimizeReferences>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <LinkErrorReporting>NoErrorReport</LinkErrorReporting>
      <EnableCOMDATFolding>false</EnableCOMDATFolding>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NIRVANA_DEBUG_ITERATORS=0;NIRVANA_HOST_PLATFORM=PLATFORM_I386;NIRVANA_NO_BAD_ALLOC;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <ExceptionHandling>Sync</ExceptionHandling>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalIncludeDirectories>..\..\Library.VC\Nirvana\SRC\Include;..\..\Library.VC\Nirvana\ORB\Include;..\..\Library.VC\Nirvana\IDL;..\..\Port\Windows\Windows;..\Core\Source;..\Core\Source\ORB;..\LibCore;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <BufferSecurityCheck>true</BufferSecurityCheck>
      <AdditionalOptions>/Zc:sizedDealloc /showFilenames /bigobj /Zc:__cplusplus -mlzcnt</AdditionalOptions>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <SupportJustMyCode>false</SupportJustMyCode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <AdditionalDependencies>ucrtd.lib;vcruntimed.lib;msvcrtd.lib;libcpmtd.lib;onecore_apiset.lib;ntdll.lib;user32.lib;dbghelp.lib;shell32.lib</AdditionalDependencies>
      <TargetMachine>MachineX86</TargetMachine>
      <EntryPointSymbol>nirvana_startup</EntryPointSymbol>
      <OptimizeReferences>true</OptimizeReferences>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <AdditionalLibraryDirectories>$(LLVMInstallDir)\lib\clang\$(LLVMIncludeVersion)\lib\windows;$(LLVMInstallDir)\lib\clang\$(LLVMToolsVersion)\lib\windows</AdditionalLibraryDirectories>
      <EnableCOMDATFolding>false</EnableCOMDATFolding>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NIRVANA_HOST_PLATFORM=PLATFORM_X64;NIRVANA_NO_BAD_ALLOC;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <ExceptionHandling>Sync</ExceptionHandling>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalIncludeDirectories>..\..\Library.VC\Nirvana\SRC\Include;..\..\Library.VC\Nirvana\ORB\Include;..\..\Library.VC\Nirvana\IDL;..\..\Port\Windows\Windows;..\Core\Source;..\Core\Source\ORB;..\LibCore;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>/Zc:sizedDealloc /bigobj /Zc:__cplusplus</AdditionalOptions>
      <SupportJustMyCode>false</SupportJustMyCode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <FunctionLevelLinking>true</FunctionLevelLinking>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <AdditionalDependencies>ucrtd.lib;vcruntimed.lib;msvcrtd.lib;onecore_apiset.lib;ntdll.lib;user32.lib;dbghelp.lib;shell32.lib</AdditionalDependencies>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol>nirvana_startup</EntryPointSymbol>
      <OptimizeReferences>true</OptimizeReferences>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <LinkErrorReporting>NoErrorReport</LinkErrorReporting>
      <EnableCOMDATFolding>false</EnableCOMDATFolding>
    </Link>
    <ProjectReference />
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NIRVANA_DEBUG_ITERATORS=0;NIRVANA_HOST_PLATFORM=PLATFORM_X64;NIRVANA_NO_BAD_ALLOC;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <ExceptionHandling>Sync</ExceptionHandling>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <AdditionalIncludeDirectories>..\..\Library.VC\Nirvana\SRC\Include;..\..\Library.VC\Nirvana\ORB\Include;..\..\Library.VC\Nirvana\IDL;..\..\Port\Windows\Windows;..\Core\Source;..\Core\Source\ORB;..\LibCore;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>/Zc:sizedDealloc /showFilenames /bigobj /Zc:__cplusplus -mlzcnt</AdditionalOptions>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <SupportJustMyCode>false</SupportJustMyCode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <AdditionalDependencies>ucrtd.lib;vcruntimed.lib;msvcrtd.lib;libcpmtd.lib;clang_rt.builtins-x86_64.lib;onecore_apiset.lib;ntdll.lib;user32.lib;dbghelp.lib;shell32.lib</AdditionalDependencies>
      <TargetMachine>MachineX64</TargetMachine>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol>nirvana_startup</EntryPointSymbol>
      <OptimizeReferences>true</OptimizeReferences>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <AdditionalLibraryDirectories>$(LLVMInstallDir)\lib\clang\$(LLVMIncludeVersion)\lib\windows;$(LLVMInstallDir)\lib\clang\$(LLVMToolsVersion)\lib\windows</AdditionalLibraryDirectories>
      <EnableCOMDATFolding>false</EnableCOMDATFolding>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>false</SDLCheck>
      <PreprocessorDefinitions>NIRVANA_HOST_PLATFORM=PLATFORM_X64;NIRVANA_NO_BAD_ALLOC;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <ExceptionHandling>Sync</ExceptionHandling>
      <AdditionalIncludeDirectories>..\..\Library.VC\Nirvana\SRC\Include;..\..\Library.VC\Nirvana\ORB\Include;..\..\Library.VC\Nirvana\IDL;..\..\Port\Windows\Windows;..\Core\Source;..\Core\Source\ORB;..\LibCore;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <AdditionalOptions>/Zc:sizedDealloc /bigobj /Zc:__cplusplus</AdditionalOptions>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <AdditionalDependencies>ucrt.lib;vcruntime.lib;msvcrt.lib;libcpmt.lib;onecore_apiset.lib;ntdll.lib;user32.lib;dbghelp.lib;shell32.lib</AdditionalDependencies>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol>nirvana_startup</EntryPointSymbol>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <LinkErrorReporting>NoErrorReport</LinkErrorReporting>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NIRVANA_HOST_PLATFORM=PLATFORM_I386;NIRVANA_NO_BAD_ALLOC;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <ExceptionHandling>Sync</ExceptionHandling>
      <AdditionalIncludeDirectories>..\..\Library.VC\Nirvana\SRC\Include;..\..\Library.VC\Nirvana\ORB\Include;..\..\Library.VC\Nirvana\IDL;..\..\Port\Windows\Windows;..\Core\Source;..\Core\Source\ORB;..\LibCore;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <AdditionalOptions>/Zc:sizedDealloc /showFilenames /bigobj /Zc:__cplusplus -mlzcnt</AdditionalOptions>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <FunctionLevelLinking>true</FunctionLevelLinking>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <AdditionalDependencies>ucrt.lib;vcruntime.lib;msvcrt.lib;libcpmt.lib;onecore_apiset.lib;ntdll.lib;user32.lib;dbghelp.lib;shell32.lib</AdditionalDependencies>
      <TargetMachine>MachineX86</TargetMachine>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol>nirvana_startup</EntryPointSymbol>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <AdditionalLibraryDirectories>$(LLVMInstallDir)\lib\clang\$(LLVMIncludeVersion)\lib\windows;$(LLVMInstallDir)\lib\clang\$(LLVMToolsVersion)\lib\windows</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>false</SDLCheck>
      <PreprocessorDefinitions>NIRVANA_HOST_PLATFORM=PLATFORM_X64;NIRVANA_NO_BAD_ALLOC;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <ExceptionHandling>Sync</ExceptionHandling>
      <AdditionalIncludeDirectories>..\..\Library.VC\Nirvana\SRC\Include;..\..\Library.VC\Nirvana\ORB\Include;..\..\Library.VC\Nirvana\IDL;..\..\Port\Windows\Windows;..\Core\Source;..\Core\Source\ORB;..\LibCore;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <AdditionalOptions>/Zc:sizedDealloc /bigobj /Zc:__cplusplus</AdditionalOptions>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <AdditionalDependencies>ucrt.lib;vcruntime.lib;msvcrt.lib;libcpmt.lib;onecore_apiset.lib;ntdll.lib;user32.lib;dbghelp.lib;shell32.lib</AdditionalDependencies>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol>nirvana_startup</EntryPointSymbol>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <LinkErrorReporting>NoErrorReport</LinkErrorReporting>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NIRVANA_HOST_PLATFORM=PLATFORM_X64;NIRVANA_NO_BAD_ALLOC;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <ExceptionHandling>Sync</ExceptionHandling>
      <AdditionalIncludeDirectories>..\..\Library.VC\Nirvana\SRC\Include;..\..\Library.VC\Nirvana\ORB\Include;..\..\Library.VC\Nirvana\IDL;..\..\Port\Windows\Windows;..\Core\Source;..\Core\Source\ORB;..\LibCore;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <AdditionalOptions>/Zc:sizedDealloc /showFilenames /bigobj /Zc:__cplusplus -mlzcnt</AdditionalOptions>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <FunctionLevelLinking>true</FunctionLevelLinking>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <AdditionalDependencies>ucrt.lib;vcruntime.lib;msvcrt.lib;libcpmt.lib;clang_rt.builtins-x86_64.lib;onecore_apiset.lib;ntdll.lib;user32.lib;dbghelp.lib;shell32.lib</AdditionalDependencies>
      <TargetMachine>MachineX64</TargetMachine>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol>nirvana_startup</EntryPointSymbol>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <AdditionalLibraryDirectories>$(LLVMInstallDir)\lib\clang\$(LLVMIncludeVersion)\lib\windows;$(LLVMInstallDir)\lib\clang\$(LLVMToolsVersion)\lib\windows</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\Library.VC\Nirvana\Library\Library.vcxproj">
      <Project>{810a987d-bff4-4112-a59f-b8eae9fccd65}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\Port\Windows\LibWindows\LibWindows.vcxproj">
      <Project>{3f85577e-cfd2-4fb9-9c3c-6da6bba3cda5}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\Port\Windows\msvcstl\msvcstl.vcxproj">
      <Project>{912c31c9-a2f1-475b-929f-1203dae1363b}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\Port\Windows\pe\pe.vcxproj">
      <Project>{389a90ef-1651-4003-a7fa-f6cfd5aa7c23}</Project>
    </ProjectReference>
    <ProjectReference Include="..\LibCore\LibCore.vcxproj">
      <Project>{3d48b775-2793-4249-bce4-57736373ec32}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\Core\Exports\exports.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">..\Core\Exports/pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">..\Core\Exports/pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">..\Core\Exports/pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">..\Core\Exports/pch.h</PrecompiledHeaderFile>
    </ClCompile>
    <ClCompile Include="..\Core\Exports\tc_exceptions.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">..\Core\Exports/pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">..\Core\Exports/pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">..\Core\Exports/pch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">..\Core\Exports/pch.h</PrecompiledHeaderFile>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\Library.VC\Nirvana\SRC\Include\Nirvana\BindError.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\SRC\Include\Nirvana\Domains.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\SRC\Include\Nirvana\File.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\SRC\Include\Nirvana\FileStat.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\SRC\Include\Nirvana\Packages.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\SRC\Include\Nirvana\Shell.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\AMI.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\Components.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\Context.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CORBA_Stream.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CORBA_types.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CosEventChannelAdmin.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CosEventComm.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CosLwLogAdministrator.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CosLwLogConsumer.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CosLwLogProducer.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CosLwLogService.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CosLwLogStatus.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CosNaming.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CosTime.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CosTimerEvent.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CosTypedEventChannelAdmin.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\CosTypedEventComm.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\Current.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\DomainManager.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\Dynamic.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\DynamicServant.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\IORequest.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\Messaging.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\NirvanaDGC.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\NVList.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\ObjectFactory.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\ORB.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\Policy.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\Pollable.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\PortableServer.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\RefCnt.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\Request.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\SFloat.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\TCKind.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\TimeBase.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\Library.VC\Nirvana\SRC\Include\Nirvana\NDBC_ex.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\Nirvana"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\%(Filename)_p.cpp</Outputs>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\Core\IDL\CoreDomains.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core" -out_h "..\LibCore\IDL"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core" -out_h "..\LibCore\IDL"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core" -out_h "..\LibCore\IDL"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core" -out_h "..\LibCore\IDL"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core" -out_h "..\LibCore\IDL"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core" -out_h "..\LibCore\IDL"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core" -out_h "..\LibCore\IDL"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core" -out_h "..\LibCore\IDL"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\Core\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\Core\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\Core\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\Core\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\Core\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\Core\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\Core\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\Core\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\Core\IDL\ORB\BiDirPolicy.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\Core\IDL\ORB\CSI.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\Core\IDL\ORB\CSIIOP.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\Core\IDL\ORB\GIOP.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\Core\IDL\ORB\GSSUP.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\Core\IDL\ORB\IIOP.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\Core\IDL\ORB\IOP.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\Core\IDL\ORB\MessageRouting.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</ExcludedFromBuild>
      <ExcludedFromBuild Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</ExcludedFromBuild>
    </CustomBuild>
    <CustomBuild Include="..\Core\IDL\ORB\RequestCallback.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\Core\IDL\ORB\TC_Factory.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\Core\ORB" -out_h "..\LibCore\IDL\ORB"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\Core\ORB\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\FT.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\ccm\CCM_Base.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\ccm\CCM_Cookie.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\ccm\CCM_Events.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\ccm\CCM_Exceptions.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\ccm\CCM_Home.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\ccm\CCM_Navigation.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\ccm\CCM_Object.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
    <CustomBuild Include="..\..\Library.VC\Nirvana\ORB\Include\CORBA\ccm\CCM_Receptacle.idl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">nidl2cpp.exe -DCCM_LW -DCCM_NOEVENT "%(Identity)" -proxy -out_cpp "$(ProjectDir)IDL\ORB\CCM" -out_h "$(SolutionDir)Library.vc\Nirvana\IDL\CORBA\ccm"</Command>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">$(ProjectDir)IDL\ORB\CCM\%(Filename)_p.cpp</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">IDL compilation</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">IDL compilation</Message>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|Win32'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug LLVM|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release 2022|x64'">true</BuildInParallel>
      <OutputItemType Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">ClCompile</OutputItemType>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug 2022|x64'">true</BuildInParallel>
    </CustomBuild>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>