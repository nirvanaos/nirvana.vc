# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      # Restore NuGet packages
      - uses: nuget/setup-nuget@v1
      - name: Restore NuGet packages
        run: nuget restore Nirvana.sln
        
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Win32 Debug
        run: ./BuildAndTest.cmd Win32 Debug

      - name: Win32 Release
        run: ./BuildAndTest.cmd Win32 Release

      - name: x64 Debug
        run: ./BuildAndTest.cmd x64 Debug

      - name: x64 Release
        run: ./BuildAndTest.cmd x64 Release

      - name: Win32 Debug LLVM
        run: ./BuildAndTest.cmd Win32 Debug LLVM

      - name: Win32 Release LLVM
        run: ./BuildAndTest.cmd Win32 Release LLVM

      - name: x64 Debug LLVM
        run: ./BuildAndTest.cmd x64 Debug LLVM

      - name: x64 Release LLVM
        run: ./BuildAndTest.cmd x64 Release LLVM

      - name: Test Reporter
        uses: dorny/test-reporter@v1.5.0
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Tests                 # Name of the check run which will be created
          path: ./*.xml               # Path to test results
          reporter: jest-junit        # Format of test results
